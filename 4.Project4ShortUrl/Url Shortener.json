{
	"info": {
		"_postman_id": "25288bd0-5eb7-4458-8c49-8b5fc6db2b6f",
		"name": "Url Shortener",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Success : Created shortened Url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Url shortening api has a correct successful response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(true);",
							"    pm.expect(jsonData.data).exist;",
							"    pm.expect(jsonData.data.longUrl).exist;",
							"    pm.expect(jsonData.data.shortUrl).exist;",
							"    pm.expect(jsonData.data.urlCode).exist;",
							"});",
							"",
							"pm.collectionVariables.set(\"url_code\", pm.response.json().data.urlCode);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"longUrl\":\"https://www.flipkart.com/mobiles/pr?sid=tyy%2C4io&p%5B%5D=facets.brand%255B%255D%3Drealme&p%5B%5D=facets.availability%255B%255D%3DExclude%2BOut%2Bof%2BStock&param=7564&otracker=clp_metro_expandable_1_3.metroExpandable.METRO_EXPANDABLE_Shop%2BNow_mobile-phones-store_Q1PDG4YW86MF_wp2&fm=neo%2Fmerchandising&iid=M_0e273f03-c7ad-4f46-b281-474c9e57715a_3.Q1PDG4YW86MF&ppt=hp&ppn=homepage&ssid=ghu08uaoxs0000001649335456963\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/url/shorten",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"url",
						"shorten"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failure : Created shortened Url Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Url shortening api has a correct failure response\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"    pm.expect(jsonData.data).not.exist;",
							"    try {",
							"        pm.expect(jsonData.msg).exist;",
							"    } catch(e){",
							"        pm.expect(jsonData.message).exist;",
							"    }",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/url/shorten",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"url",
						"shorten"
					]
				}
			},
			"response": []
		},
		{
			"name": "Success : Fetch shortened Url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Fetch shortened url api has a correct successful response\", function () {",
							"    pm.expect(pm.response).exist;",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/{{url_code}}",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"{{url_code}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Failure : Fetch shortened Url",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Fetch shortened url api has a correct failure response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(false);",
							"        try {",
							"        pm.expect(jsonData.msg).exist;",
							"    } catch(e){",
							"        pm.expect(jsonData.message).exist;",
							"    }",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/bad_short_code",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"bad_short_code"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "url_code",
			"value": ""
		}
	]
}